{"version":3,"sources":["checklist-microservice.js"],"names":["express","require","mongoose","ApolloServer","gql","bodyParser","config","app","use","json","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","db","on","console","error","bind","checklistSchema","Schema","String","submittedAt","type","Date","default","now","Checklist","model","Query","typeDefs","_","_ref","userId","regeneratorRuntime","async","_context","prev","next","awrap","find","abrupt","sent","stop","getChecklists","submitChecklist","_ref2","symptoms","checklist","_context2","save","server","start","then","applyMiddleware","listen","port","log","concat","graphqlPath"],"mappings":"khBAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,qBACKA,QAAQ,yBAA9BE,sBAAAA,aAAcC,aAAAA,IAChBC,WAAaJ,QAAQ,eAC3BA,QAAQ,UAAUK,SAElB,IAAMC,IAAMP,UACZO,IAAIC,IAAIH,WAAWI,QAGnBP,SAASQ,QAAQC,QAAQC,IAAIC,YAAa,CACtCC,iBAAiB,EACjBC,oBAAoB,IAZxB,IAAMf,GAAOE,SAAGD,WAehBe,GAAGC,GAAG,QAASC,QAAQC,MAAMC,KAAKF,QAAS,8BAG3C,IAAMG,gBAhBgC,IAAAnB,SAAAoB,OAAA,CAA9BnB,OAAAA,OAAcC,SAkBR,CAACmB,QACXC,YAAa,CAAEC,KAAMC,KAAMC,QAASD,KAAKE,OAEvCC,UAAY3B,SAAS4B,MAAM,YAAaT,iBAjBxCd,SAAaH,IAAPJ,mBAiBN6B,UAAY3B,CAsBd6B,MAAO,CAnBLC,cAAQ,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAL,EAAAD,EAAAC,OAAAG,EAAAE,KAAA,EAAAJ,mBAAAK,MAqBWZ,UAAUa,KAAK,CAAEP,OAAAA,KArB5B,KAAA,EAAA,OAAAG,EAAAK,OAAA,SAAAL,EAAAM,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAN,EAAAO,YAoBNC,SAAAA,CAAeC,gBAAA,SAAAd,EAAAe,GAAA,IAAAb,EAAAc,EAAAC,EAAA,OAAAd,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,OAAAL,EAAAa,EAAAb,OAAAc,EAAAD,EAAAC,SAAAC,EAAA,IAAArB,UAAA,CAAAM,OAAAA,EAAAc,SAAAA,IAAAE,EAAAX,KAAA,EAAAJ,mBAAAK,MAAAS,EAAAE,QAAA,KAAA,EAAA,OAAAD,EAAAR,OAAA,SAAAQ,EAAAP,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAAN,aACmBV,OAAAA,IAAAA,aAAAA,CAAAA,SAAAA,SAAAA,UAAAA,YAAFkB,OAAAC,QAAfC,KADF,WAenBF,OAAOG,gBAAgB,CAAEjD,IAAAA,MAfNA,IAAAkD,OAAA,CAAAC,KAAA,MAAA,WAAA,OAAAxC,QAAAyC,IAAA,mDAAAC,OAAAP,OAAAQ","file":"checklist-microservice.min.js","sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst { ApolloServer, gql } = require('apollo-server-express');\r\nconst bodyParser = require('body-parser');\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\n// MongoDB Connection\r\nmongoose.connect(process.env.MONGODB_URI, {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n});\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// Checklist Schema\r\nconst checklistSchema = new mongoose.Schema({\r\n    userId: String,\r\n    symptoms: [String],\r\n    submittedAt: { type: Date, default: Date.now },\r\n});\r\nconst Checklist = mongoose.model('Checklist', checklistSchema);\r\n\r\n// GraphQL Schema\r\nconst typeDefs = gql `\r\n  type Checklist {\r\n    id: ID\r\n    userId: String\r\n    symptoms: [String]\r\n    submittedAt: String\r\n  }\r\n\r\n  type Query {\r\n    getChecklists(userId: String!): [Checklist]\r\n  }\r\n\r\n  type Mutation {\r\n    submitChecklist(userId: String!, symptoms: [String]!): Checklist\r\n  }\r\n`;\r\n\r\n// GraphQL Resolvers\r\nconst resolvers = {\r\n    Query: {\r\n        getChecklists: async(_, { userId }) => {\r\n            return await Checklist.find({ userId });\r\n        },\r\n    },\r\n    Mutation: {\r\n        submitChecklist: async(_, { userId, symptoms }) => {\r\n            const checklist = new Checklist({ userId, symptoms });\r\n            return await checklist.save();\r\n        },\r\n    },\r\n};\r\n\r\n// Apollo Server\r\nconst server = new ApolloServer({ typeDefs, resolvers });\r\nserver.start().then(() => {\r\n    server.applyMiddleware({ app });\r\n    app.listen({ port: 4004 }, () =>\r\n        console.log(`Checklist service ready at http://localhost:4004${server.graphqlPath}`)\r\n    );\r\n});"]}