{"version":3,"sources":["checklist-microservice.js"],"names":["express","require","mongoose","ApolloServer","gql","bodyParser","config","app","use","json","connect","process","env","MONGODB_URI","then","console","log","err","error","db","connection","on","bind","checklistSchema","Schema","userId","String","Date","default","now","model","typeDefs","_templateObject","resolvers","Query","Checklist","find","submitChecklist","_","_ref2","symptoms","checklist","regeneratorRuntime","async","_context2","prev","next","awrap","save","abrupt","sent","stop","server","start","listen","port","concat","graphqlPath"],"mappings":"khBAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,qBACKA,QAAQ,yBAA9BE,sBAAAA,aAAcC,aAAAA,IAChBC,WAAaJ,QAAQ,eAC3BA,QAAQ,UAAUK,SAElB,IAAMC,IAAMP,UACZO,IAAIC,IAAIH,WAAWI,QAGnBP,SAASQ,QAAQC,QAAQC,IAAIC,aACxBC,KAAK,WAAA,OAAMC,QAAQC,IAAI,uBAD5B,MAEW,SAAAC,GAAG,OAAIF,QAAQG,MAAM,4BAA6BD,KAC7D,IAAME,GAAKjB,SAASkB,WAbpBD,GAAAE,GAAMrB,QAAUC,QAAQiB,MAAAI,KAAxBP,QAAA,8BAiBA,IAAMQ,gBAAkB,IAAIrB,SAASsB,OAAO,CACxCC,OAAQC,OAhBJvB,SAAAA,CAAAA,QAAcC,YAkBL,CAlBKA,KAkBGuB,KAAMC,QAASD,KAAKE,OAjBvCxB,UAAaJ,SAAQ6B,MAAA,YAA3BP,iBAsBMQ,SAAW3B,IAAH4B,mBALGC,UAAA,CAHjBC,MAAA,CAKMC,cAAYjC,SAAS4B,EAAT5B,GAAAA,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAeuB,EAAfvB,EAAeuB,OAAfvB,EAAAA,KAAAA,EAAAA,mBAAAA,MAwBOiC,UAAUC,KAAK,CAAEX,OAAAA,KAxBxBvB,KAAAA,EAAAA,OAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAqBZ+B,SAAS,CACNI,gBAAE,SAAAC,EAAAC,GAAA,IAAAd,EAAAe,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAArB,EAAAc,EAAAd,OAAAe,EAAAD,EAAAC,SACUC,EAAE,IAAAN,UAAA,CAAAV,OAAAA,EAAAe,SAAAA,IADZI,EAAAE,KAAA,EAAAJ,mBAAAK,MACYN,EAAAO,QADZ,KAAA,EAAA,OAAAJ,EAAAK,OAAA,SAAAL,EAAAM,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAN,EAAAO,aACYC,OAAA,IAAAjD,aAAA,CAAA4B,SAAAA,SAAAE,UAAAA,YAAAmB,OAAAC,QAAAvC,KAAA,WACmBW,OAAAA,gBAAAA,CAAAA,IAAAA,MAAFlB,IAAA+C,OAAf,CADFC,KAAA,MAAA,WAAA,OAiBfxC,QAAQC,IAAR,mDAAAwC,OAA+DJ,OAAOK","file":"checklist-microservice.min.js","sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst { ApolloServer, gql } = require('apollo-server-express');\r\nconst bodyParser = require('body-parser');\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\n// MongoDB Connection\r\nmongoose.connect(process.env.MONGODB_URI)\r\n    .then(() => console.log(\"MongoDB connected\"))\r\n    .catch(err => console.error(\"MongoDB connection error:\", err));\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// Checklist Schema\r\nconst checklistSchema = new mongoose.Schema({\r\n    userId: String,\r\n    symptoms: [String],\r\n    submittedAt: { type: Date, default: Date.now },\r\n});\r\nconst Checklist = mongoose.model('Checklist', checklistSchema);\r\n\r\n// GraphQL Schema\r\nconst typeDefs = gql `\r\n  type Checklist {\r\n    id: ID\r\n    userId: String\r\n    symptoms: [String]\r\n    submittedAt: String\r\n  }\r\n\r\n  type Query {\r\n    getChecklists(userId: String!): [Checklist]\r\n  }\r\n\r\n  type Mutation {\r\n    submitChecklist(userId: String!, symptoms: [String]!): Checklist\r\n  }\r\n`;\r\n\r\n// GraphQL Resolvers\r\nconst resolvers = {\r\n    Query: {\r\n        getChecklists: async(_, { userId }) => {\r\n            return await Checklist.find({ userId });\r\n        },\r\n    },\r\n    Mutation: {\r\n        submitChecklist: async(_, { userId, symptoms }) => {\r\n            const checklist = new Checklist({ userId, symptoms });\r\n            return await checklist.save();\r\n        },\r\n    },\r\n};\r\n\r\n// Apollo Server\r\nconst server = new ApolloServer({ typeDefs, resolvers });\r\nserver.start().then(() => {\r\n    server.applyMiddleware({ app });\r\n    app.listen({ port: 4004 }, () =>\r\n        console.log(`Checklist service ready at http://localhost:4002${server.graphqlPath}`)\r\n    );\r\n});"]}