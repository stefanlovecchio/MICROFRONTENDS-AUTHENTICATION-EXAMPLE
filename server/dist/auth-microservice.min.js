"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  type User {\n    username: String!\n    password: String!\n    firstName: String!\n    lastName: String!\n    email: String!\n    accountType: String!\n  }\n\n  type Query {\n    currentUser: User\n    currentUserType: User\n  }\n  type Mutation {\n    login(username: String!, password: String!): Boolean\n    register(username: String!, password: String!, firstName: String!, lastName: String!, email: String!, accountType: String): Boolean\n    logout: Boolean\n  }\n"]);return _templateObject=function(){return e},e}function _taggedTemplateLiteral(e,r){return r=r||e.slice(0),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}var express=require("express"),_require=require("apollo-server-express"),ApolloServer=_require.ApolloServer,gql=_require.gql,jwt=require("jsonwebtoken"),cookieParser=require("cookie-parser"),cors=require("cors"),mongoose=require("mongoose"),bcrypt=require("bcrypt");require("dotenv").config();var app=express();app.use(cors({origin:["http://localhost:3000","http://localhost:3001","http://localhost:3002","http://localhost:3003","http://localhost:3004","https://studio.apollographql.com"],credentials:!0})),app.use(cookieParser()),mongoose.connect(process.env.MONGODB_URI).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.error("MongoDB connection error:",e)});var userSchema=require("./userSchema"),User=mongoose.model("User",userSchema),typeDefs=gql(_templateObject());module.exports=userSchema;var resolvers={Query:{currentUser:function(e,r,n){var t=n.req.cookies.token;if(!t)return null;try{return{username:jwt.verify(t,process.env.JWT_SECRET).username}}catch(e){return null}},currentUserType:function(e,r,n){var t=n.req.cookies.token;if(!t)return null;try{var o=jwt.verify(t,process.env.JWT_SECRET);return console.log("decoded jwt token: "+o.accountType),{accountType:o.accountType}}catch(e){return null}}},Mutation:{login:function(e,r,n){var t,o,s,a,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.username,o=r.password,s=n.res,e.next=4,regeneratorRuntime.awrap(User.findOne({username:t}));case 4:if(a=e.sent){e.next=7;break}throw new Error("User not found");case 7:return e.next=9,regeneratorRuntime.awrap(bcrypt.compare(o,a.password));case 9:if(e.sent){e.next=12;break}throw new Error("Invalid password");case 12:return c=jwt.sign({username:a.username,accountType:a.accountType},process.env.JWT_SECRET,{expiresIn:"1d"}),s.cookie("token",c,{httpOnly:!0,maxAge:864e5}),e.abrupt("return",!0);case 15:case"end":return e.stop()}})},register:function(e,r){var n,t,o,s,a,c,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.username,t=r.password,o=r.firstName,s=r.lastName,a=r.email,c=r.accountType,e.next=3,regeneratorRuntime.awrap(User.findOne({username:n}));case 3:if(e.sent)throw new Error("Username is already taken");e.next=6;break;case 6:return e.next=8,regeneratorRuntime.awrap(bcrypt.hash(t,10));case 8:return u=e.sent,i=new User({username:n,password:u,firstName:o,lastName:s,email:a,accountType:c}),e.next=12,regeneratorRuntime.awrap(i.save());case 12:return e.abrupt("return",!0);case 13:case"end":return e.stop()}})},logout:function(e,r,n){return n.res.clearCookie("token"),!0}}},server=new ApolloServer({typeDefs:typeDefs,resolvers:resolvers,context:function(e){return{req:e.req,res:e.res}}});server.start().then(function(){server.applyMiddleware({app:app,cors:!1}),app.listen({port:4001},function(){return console.log("ðŸš€ Auth Server ready at http://localhost:4001".concat(server.graphqlPath))})});
//# sourceMappingURL=auth-microservice.min.js.map
