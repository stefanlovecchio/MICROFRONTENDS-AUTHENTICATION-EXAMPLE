"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n    type VitalSign {\n        id: ID\n        userId: ID\n        heartRate: Int\n        bloodPressure: Int\n        temperature: Float\n        createdAt: String\n    }\n\n    type Query {\n        getVitalSigns(userId:ID, username: String): [VitalSign]\n    }\n\n    type Mutation {\n        addVitalSign(username: String!, heartRate: Int!, bloodPressure: Int!, temperature: Float!): VitalSign\n        updateVitalSign(id: ID!, heartRate: Int, bloodPressure: Int, temperature: Float): VitalSign\n    }\n"]);return _templateObject=function(){return e},e}function _taggedTemplateLiteral(e,r){return r=r||e.slice(0),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}var express=require("express"),_require=require("apollo-server-express"),ApolloServer=_require.ApolloServer,gql=_require.gql,jwt=require("jsonwebtoken"),cors=require("cors"),cookieParser=require("cookie-parser"),bodyParser=require("body-parser"),userSchema=require("./userSchema");require("dotenv").config();var mongoose=require("mongoose"),Schema=mongoose.Schema,model=mongoose.model;mongoose.connect(process.env.MONGODB_URI).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.error("MongoDB connection error:",e)});var db=mongoose.connection;db.on("error",console.error.bind(console,"MongoDB connection error:")),db.on("error",console.error.bind(console,"MongoDB connection error:"));var User=model("User",userSchema),app=express();app.use(cors({origin:["http://localhost:3000","http://localhost:3001","http://localhost:3002","http://localhost:3003","https://studio.apollographql.com"],credentials:!0})),app.use(cookieParser());var vitalSignSchema=new Schema({userId:{type:mongoose.Schema.Types.ObjectId,required:!0,ref:"User"},heartRate:Number,bloodPressure:String,temperature:Number,createdAt:{type:Date,default:Date.now}}),vitalSign=model("VitalSign",vitalSignSchema),typeDefs=gql(_templateObject());app.use(bodyParser.json());var getVitalSignsByUsername=function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(vitalSign.aggregate([{$lookup:{from:"users",localField:"userId",foreignField:"_id",as:"user"}},{$match:{"user.username":{$regex:r,$options:"i"}}},{$addFields:{id:"$_id"}},{$project:{_id:0,id:1,userId:1,heartRate:1,bloodPressure:1,temperature:1,createdAt:1}}]));case 3:return t=e.sent,e.abrupt("return",t);case 7:throw e.prev=7,e.t0=e.catch(0),new Error("Error fetching vital signs for this username: "+e.t0.message);case 10:case"end":return e.stop()}},null,null,[[0,7]])},getUserIdByUsername=function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(User.findOne({username:r}));case 2:return t=e.sent,e.abrupt("return",t._id);case 4:case"end":return e.stop()}})},resolvers={Query:{getVitalSigns:function(e,r){var t,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=r.userId,n=r.username,t)return e.prev=2,e.next=5,regeneratorRuntime.awrap(vitalSign.find({userId:t}));e.next=14;break;case 5:return a=e.sent,e.abrupt("return",a);case 9:throw e.prev=9,e.t0=e.catch(2),new Error("Error fetching vital signs: "+e.t0.message);case 12:e.next=19;break;case 14:if(n)return e.abrupt("return",getVitalSignsByUsername(n));e.next=18;break;case 18:throw new Error("Invalid username or userId");case 19:case"end":return e.stop()}},null,null,[[2,9]])}},Mutation:{addVitalSign:function(e,r){var t,n,a,o,s,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.username,n=r.heartRate,a=r.bloodPressure,o=r.temperature,e.next=3,regeneratorRuntime.awrap(getUserIdByUsername(t));case 3:return s=e.sent,console.log(s),e.prev=5,i=new vitalSign({userId:s,heartRate:n,bloodPressure:a,temperature:o}),e.next=9,regeneratorRuntime.awrap(i.save());case 9:return e.abrupt("return",e.sent);case 12:throw e.prev=12,e.t0=e.catch(5),new Error("Error adding vital sign: "+e.t0.message);case 15:case"end":return e.stop()}},null,null,[[5,12]])},updateVitalSign:function(e,r){var t,n,a,o,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.id,n=r.heartRate,a=r.bloodPressure,o=r.temperature,e.prev=1,e.next=4,regeneratorRuntime.awrap(vitalSign.findByIdAndUpdate(t,{heartRate:n,bloodPressure:a,temperature:o},{new:!0}));case 4:if(s=e.sent){e.next=7;break}throw new Error("Vital sign not found");case 7:return e.abrupt("return",s);case 10:throw e.prev=10,e.t0=e.catch(1),new Error("Error updating vital sign: "+e.t0.message);case 13:case"end":return e.stop()}},null,null,[[1,10]])}}},server=new ApolloServer({typeDefs:typeDefs,resolvers:resolvers,context:function(e){var r=e.req.cookies.token;if(console.log("token in vital signs:",r),r)try{return{user:jwt.verify(r,process.env.JWT_SECRET)}}catch(e){throw new Error("Your session expired. Sign in again.")}}});server.start().then(function(){server.applyMiddleware({app:app,cors:!1}),app.listen({port:4002},function(){return console.log("ðŸš€ Vital Signs Server ready at http://localhost:4005".concat(server.graphqlPath))})});
//# sourceMappingURL=vitalSigns-microservice.min.js.map
