"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  type Checklist {\n    id: ID\n    userId: String\n    symptoms: [String]\n    submittedAt: String\n  }\n\n  type Query {\n    getChecklists(userId: String!): [Checklist]\n  }\n\n  type Mutation {\n    submitChecklist(userId: String!, symptoms: [String]!): Checklist\n  }\n"]);return _templateObject=function(){return e},e}function _taggedTemplateLiteral(e,r){return r=r||e.slice(0),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}var express=require("express"),mongoose=require("mongoose"),_require=require("apollo-server-express"),ApolloServer=_require.ApolloServer,gql=_require.gql,bodyParser=require("body-parser");require("dotenv").config();var app=express();app.use(bodyParser.json()),mongoose.connect(process.env.MONGODB_URI).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.error("MongoDB connection error:",e)});var db=mongoose.connection;db.on("error",console.error.bind(console,"MongoDB connection error:"));var checklistSchema=new mongoose.Schema({userId:String,symptoms:[String],submittedAt:{type:Date,default:Date.now}}),Checklist=mongoose.model("Checklist",checklistSchema),typeDefs=gql(_templateObject()),resolvers={Query:{getChecklists:function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.userId,e.next=3,regeneratorRuntime.awrap(Checklist.find({userId:t}));case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}})}},Mutation:{submitChecklist:function(e,r){var t,n,s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.userId,n=r.symptoms,s=new Checklist({userId:t,symptoms:n}),e.next=4,regeneratorRuntime.awrap(s.save());case 4:return e.abrupt("return",e.sent);case 5:case"end":return e.stop()}})}}},server=new ApolloServer({typeDefs:typeDefs,resolvers:resolvers});server.start().then(function(){server.applyMiddleware({app:app}),app.listen({port:4004},function(){return console.log("Checklist service ready at http://localhost:4002".concat(server.graphqlPath))})});
//# sourceMappingURL=checklist-microservice.min.js.map
