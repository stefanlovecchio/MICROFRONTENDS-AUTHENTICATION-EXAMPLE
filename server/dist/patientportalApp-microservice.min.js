"use strict";function _templateObject(){var e=_taggedTemplateLiteral(["\n  type EmergencyAlert {\n    id: ID!\n    patientName: String!\n    type: String!\n    description: String\n    timestamp: String!\n  }\n\n  type Query {\n    emergencyAlerts: [EmergencyAlert]\n  }\n\n  type Mutation {\n    addEmergencyAlert(patientName: String!, type: String!, description: String): EmergencyAlert\n  }\n"]);return _templateObject=function(){return e},e}function _taggedTemplateLiteral(e,r){return r=r||e.slice(0),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}require("dotenv").config();var express=require("express"),_require=require("apollo-server-express"),ApolloServer=_require.ApolloServer,gql=_require.gql,mongoose=require("mongoose");mongoose.connect(process.env.MONGODB_URI).then(function(){return console.log("MongoDB connected")}).catch(function(e){return console.error("MongoDB connection error:",e)});var emergencyAlertSchema=new mongoose.Schema({patientName:{type:String,required:!0},type:{type:String,required:!0},description:{type:String},timestamp:{type:Date,default:Date.now}}),EmergencyAlert=mongoose.model("EmergencyAlert",emergencyAlertSchema),typeDefs=gql(_templateObject()),resolvers={Query:{emergencyAlerts:function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(EmergencyAlert.find().sort({timestamp:-1}));case 3:return e.abrupt("return",e.sent);case 6:throw e.prev=6,e.t0=e.catch(0),console.error("Error fetching emergency alerts:",e.t0),new Error("Could not fetch emergency alerts");case 10:case"end":return e.stop()}},null,null,[[0,6]])}},Mutation:{addEmergencyAlert:function(e,r){var t,n,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return t=r.patientName,n=r.type,o=r.description,e.prev=1,c=new EmergencyAlert({patientName:t,type:n,description:o}),e.next=5,regeneratorRuntime.awrap(c.save());case 5:return e.abrupt("return",c);case 8:throw e.prev=8,e.t0=e.catch(1),console.error("Error adding emergency alert:",e.t0),new Error("Could not add emergency alert");case 12:case"end":return e.stop()}},null,null,[[1,8]])}}},app=express(),server=new ApolloServer({typeDefs:typeDefs,resolvers:resolvers,introspection:!0});server.start().then(function(){server.applyMiddleware({app:app});var e=process.env.PORT||4004;app.listen(e,function(){console.log("ðŸš€ Emergency Alert Service running at http://localhost:".concat(e).concat(server.graphqlPath))})});
//# sourceMappingURL=patientportalApp-microservice.min.js.map
